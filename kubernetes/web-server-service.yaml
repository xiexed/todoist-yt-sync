---
apiVersion: v1
kind: Service
metadata:
  name: web-server
  labels:
    app: web-server
spec:
  type: NodePort
  selector:
    app: web-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      name: http

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server
spec:
  selector:
    matchLabels:
      app: web-server
  replicas: 2
  template:
    metadata:
      labels:
        app: web-server
    spec:
      containers:
        - name: nginx
          image: nginxinc/nginx-unprivileged:stable
          ports:
            - containerPort: 8080
          securityContext:
            runAsUser: 101
            runAsGroup: 101
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 2
          volumeMounts:
            - name: html-content
              mountPath: /usr/share/nginx/html
              readOnly: true
      volumes:
        - name: html-content
          configMap:
            name: web-server-content

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-server-content
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
      <title>Todoist-YT-Sync Web Server</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          margin: 40px;
          color: #333;
        }
        h1 {
          color: #2c3e50;
        }
        .container {
          max-width: 800px;
          margin: 0 auto;
          padding: 20px;
          background-color: #f9f9f9;
          border-radius: 5px;
          box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
      </style>
    </head>
    <body>
      <div class="container">
        <h1>Todoist-YT-Sync Web Server</h1>
        <p>This is a simple web server running on Kubernetes.</p>
        <p>The server is exposed on port 80 via a LoadBalancer service.</p>
      </div>
    </body>
    </html>