name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  # Allow manual triggering from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: registry.jetbrains.team
  REGISTRY_PATH: p/td-sync/containers
  IMAGE_NAME: td-sync

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      # Login to JetBrains Docker registry
      - name: Login to JetBrains Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.JETBRAINS_REGISTRY_USERNAME }}
          password: ${{ secrets.JETBRAINS_REGISTRY_PASSWORD }}

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Determine version tag
      - name: Determine version
        id: vars
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
            echo "TAGS=${REGISTRY}/${REGISTRY_PATH}/${IMAGE_NAME}:${VERSION},${REGISTRY}/${REGISTRY_PATH}/${IMAGE_NAME}:latest" >> $GITHUB_ENV
          else
            SHA=$(echo ${{ github.sha }} | cut -c1-7)
            echo "VERSION=sha-${SHA}" >> $GITHUB_ENV
            echo "TAGS=${REGISTRY}/${REGISTRY_PATH}/${IMAGE_NAME}:sha-${SHA},${REGISTRY}/${REGISTRY_PATH}/${IMAGE_NAME}:latest" >> $GITHUB_ENV
          fi

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ env.TAGS }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REGISTRY_PATH }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.REGISTRY_PATH }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Image digest
        run: echo "Image has been pushed with digest ${{ steps.build-and-push.outputs.digest }}"
      
      # Optional: Add notification about deployment
      - name: Notify on success
        if: success()
        run: |
          echo "Docker image ${{ env.REGISTRY }}/${{ env.REGISTRY_PATH }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} has been built and pushed successfully!"
          echo "To update deployment in Kubernetes, delete the pod to let it be recreated with the new image."